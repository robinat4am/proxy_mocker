on: push
name: Curl Proxy
jobs:
    test_proxy:
        runs-on: windows-2022
        steps:
        - name: Checkout code
          uses: actions/checkout@v4
        
        - name: Set up Python
          uses: actions/setup-python@v4
          with:
            python-version: '3.x'
        
        - name: Install dependencies
          shell: pwsh
          run: |
            cd proxy_mock
            pip install -r requirements.txt
        
        - name: Start Python script in background
          shell: pwsh
          run: |
            cd proxy_mock
            # Start the proxy server in background and save the process ID
            $process = Start-Process -NoNewWindow -FilePath "python" -ArgumentList "proxyserver.py" -PassThru -WorkingDirectory "."
            $process.Id | Out-File -FilePath "proxy_pid.txt" -Encoding ASCII
            Write-Host "Started proxy server with PID: $($process.Id)"
        
        - name: Wait for server to start and verify
          shell: pwsh
          run: |
            Write-Host "Waiting for proxy server to start..."
            Start-Sleep -Seconds 10
            
            # Check if the process is still running
            if (Test-Path "proxy_mock\proxy_pid.txt") {
                $pid = Get-Content "proxy_mock\proxy_pid.txt"
                $process = Get-Process -Id $pid -ErrorAction SilentlyContinue
                if ($process) {
                    Write-Host "Proxy server is running with PID: $pid"
                } else {
                    Write-Host "Proxy server failed to start"
                    exit 1
                }
            } else {
                Write-Host "PID file not found"
                exit 1
            }
        
        - name: Test Proxy with Curl
          shell: bash
          run: |
            echo "Testing proxy server connection..."
            # Test basic connectivity first
            curl -v --connect-timeout 10 --max-time 30 http://127.0.0.1:8080/ || (echo "Proxy server test failed" && exit 1)
            echo "Proxy server test passed!"
        
        - name: Test with qa web dev env
          shell: bash
          run: |
            echo "Testing qa web dev server connection..."
            # Test basic connectivity first
            curl -v --connect-timeout 10 --max-time 30 https://agentsapi-dev-qaweb.healthcare.barco.com/ || (echo "qa web dev server test failed" && exit 1)
            echo "qa web dev server test passed!"
                
        - name: Stop Proxy Server
          shell: pwsh
          if: always()
          run: |
            Write-Host "Stopping proxy server..."
            if (Test-Path "proxy_mock\proxy_pid.txt") {
                $pid = Get-Content "proxy_mock\proxy_pid.txt"
                Write-Host "Stopping proxy server with PID: $pid"
                try {
                    Stop-Process -Id $pid -Force -ErrorAction SilentlyContinue
                    Write-Host "Proxy server stopped"
                } catch {
                    Write-Host "Failed to stop process with PID: $pid"
                }
                Remove-Item "proxy_mock\proxy_pid.txt" -ErrorAction SilentlyContinue
            } else {
                Write-Host "PID file not found, proxy may not be running"
            }
            
            # Also kill any remaining proxy processes
            Get-Process | Where-Object {$_.ProcessName -eq "python" -and $_.CommandLine -like "*proxyserver.py*"} | Stop-Process -Force -ErrorAction SilentlyContinue
